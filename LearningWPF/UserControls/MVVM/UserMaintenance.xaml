<UserControl
    x:Class="LearningWPF.UserControls.MVVM.UserMaintenance"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:LearningWPF.UserControls.MVVM"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:LearningWPF.ViewModels"
    d:DesignHeight="500"
    d:DesignWidth="800"
    Loaded="UserMaintenanceControl_Loaded"
    Style="{StaticResource CustomizedDesignUserControl}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <viewModels:UserMaintenanceViewModel x:Key="ViewModel" />
    </UserControl.Resources>

    <Grid DataContext="{StaticResource ViewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="480" />
            <ColumnDefinition Width="280" />
        </Grid.ColumnDefinitions>
        <!--  1º Column - Users  -->
        <Grid Grid.Column="0">
            <DataGrid
                x:Name="UsersDataGrid"
                Grid.Row="0"
                Grid.Column="0"
                Margin="0,0,14,0"
                AllowDrop="True"
                Drop="UsersDataGrid_Drop"
                IsEnabled="{Binding IsAddMode, Converter={StaticResource InverseBooleanConverter}}"
                IsReadOnly="True"
                ItemsSource="{Binding Users}"
                LoadingRow="UsersDataGrid_LoadingRow"
                PreviewKeyDown="UsersDataGrid_PreviewKeyDown"
                PreviewMouseDown="UsersDataGrid_PreviewMouseDown"
                SelectedItem="{Binding UserSelectedItem}"
                SelectionChanged="UsersDataGrid_SelectionChanged">
                <DataGrid.Resources>
                    <!--  MaterialDesignTextBoxBorder set to transparent to show the cells without border after selection.  -->
                    <SolidColorBrush x:Key="MaterialDesignTextBoxBorder" Color="Transparent" />
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <!--#region Field columns-->
                    <DataGridTextColumn
                        Binding="{Binding Id}"
                        Header="Id"
                        Visibility="Collapsed" />
                    <DataGridTextColumn
                        x:Name="UserNameDataGridColumn"
                        Width="*"
                        Binding="{Binding UserName, UpdateSourceTrigger=PropertyChanged}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="Username" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding FirstName, UpdateSourceTrigger=PropertyChanged}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="First Name" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding LastName, UpdateSourceTrigger=PropertyChanged}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="Last Name" />
                    <DataGridCheckBoxColumn
                        Binding="{Binding Active, UpdateSourceTrigger=PropertyChanged}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                        Header="Active" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding EmailAddress, UpdateSourceTrigger=PropertyChanged}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        Header="Email Address" />
                    <!--#endregion-->
                    <!--#region Button columns-->
                    <DataGridTemplateColumn
                        Width="96"
                        CellStyle="{StaticResource CustomizedDesignIconDataGridCell}"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                    <StackPanel
                                        x:Name="RowStackPanel"
                                        Width="Auto"
                                        Orientation="Horizontal"
                                        Visibility="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Converter={StaticResource VisibilityConverter}}">
                                        <StackPanel.Resources>
                                            <Style BasedOn="{StaticResource CustomizedDesignSmallButton}" TargetType="{x:Type Button}" />
                                        </StackPanel.Resources>
                                        <Button
                                            x:Name="DeleteButton"
                                            Click="DeleteButton_Click"
                                            Content="{materialDesign:PackIcon TrashCanOutline}"
                                            ToolTip="{DynamicResource Button.Delete}" />
                                        <TextBlock
                                            x:Name="ReorderIcon"
                                            Margin="5,0"
                                            VerticalAlignment="Center"
                                            AllowDrop="True"
                                            Cursor="Hand"
                                            PreviewMouseMove="ReorderIcon_PreviewMouseMove"
                                            ToolTip="{DynamicResource Icon.Reorder}">
                                            <materialDesign:PackIcon Foreground="{DynamicResource PrimaryHueDarkBrush}" Kind="MouseMoveVertical" />
                                            <!--  Kind="ArrowUpDownBold|MouseMoveVertical|PanVertical|ReorderHorizontal|SwapVertical|SwapVerticalBold" />  -->
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--#endregion-->
                    <DataGridTextColumn x:Name="LastDataGridColumn" Width="0.3*" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!--  2º Column - Add/Edit  -->
        <StackPanel Grid.Column="1">
            <!--#region Fields-->
            <StackPanel IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}">
                <StackPanel.Resources>
                    <Style BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}" TargetType="ComboBox" />
                    <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox" />
                </StackPanel.Resources>
                <TextBlock
                    Margin="4"
                    Style="{StaticResource CustomizedDesignSubtitle1TextBlock}"
                    Text="Users" />
                <TextBox
                    x:Name="UserNameTextBox"
                    Margin="4"
                    Padding="8"
                    materialDesign:HintAssist.Hint="Username"
                    MaxLength="50">
                    <Binding Path="UserSelectedItem.UserName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <viewModels:NotEmptyValidationRule />
                            <!--  Optionally ValidatesOnTargetUpdated="True" indicates that the validation rule runs when the target of the Binding is updated.  -->
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <TextBox
                    Margin="4"
                    Padding="8"
                    materialDesign:HintAssist.Hint="First Name"
                    LostFocus="NameTextBox_LostFocus"
                    MaxLength="50">
                    <Binding Path="UserSelectedItem.FirstName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <viewModels:NotEmptyValidationRule />
                            <!--  Optionally ValidatesOnTargetUpdated="True" indicates that the validation rule runs when the target of the Binding is updated.  -->
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <TextBox
                    Margin="4"
                    Padding="8"
                    materialDesign:HintAssist.Hint="Last Name"
                    LostFocus="NameTextBox_LostFocus"
                    MaxLength="50">
                    <Binding Path="UserSelectedItem.LastName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <viewModels:NotEmptyValidationRule />
                            <!--  Optionally ValidatesOnTargetUpdated="True" indicates that the validation rule runs when the target of the Binding is updated.  -->
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="4"
                        Padding="8"
                        Style="{StaticResource CustomizedLabelTextBlock}">
                        <TextBlock Text="Active" Visibility="{Binding UserSelectedItem.Active, Converter={StaticResource VisibilityConverter}}" />
                        <TextBlock Text="Inactive" Visibility="{Binding UserSelectedItem.Active, Converter={StaticResource InverseVisibilityConverter}}" />
                    </TextBlock>
                    <ToggleButton
                        Grid.Row="0"
                        Grid.Column="1"
                        HorizontalAlignment="Left"
                        IsChecked="{Binding UserSelectedItem.Active, UpdateSourceTrigger=PropertyChanged}"
                        IsTabStop="False" />
                </Grid>
                <TextBox
                    Margin="4"
                    Padding="8"
                    materialDesign:HintAssist.Hint="Email Address"
                    LostFocus="NameTextBox_LostFocus"
                    MaxLength="100">
                    <Binding Path="UserSelectedItem.EmailAddress" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <viewModels:NotEmptyValidationRule />
                            <!--  Optionally ValidatesOnTargetUpdated="True" indicates that the validation rule runs when the target of the Binding is updated.  -->
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

            </StackPanel>
            <!--#endregion-->
            <!--#region Buttons-->
            <WrapPanel Margin="0,16" HorizontalAlignment="Right">
                <Button
                    x:Name="EditButton"
                    Click="EditButton_Click"
                    Tag="FormButton">
                    <TextBlock>
                        <TextBlock Text="Edit" Visibility="{Binding IsReadOnly, Converter={StaticResource VisibilityConverter}}" />
                        <TextBlock Text="Cancel" Visibility="{Binding IsReadOnly, Converter={StaticResource InverseVisibilityConverter}}" />
                    </TextBlock>
                </Button>
                <Button
                    x:Name="AddButton"
                    Click="AddButton_Click"
                    Style="{StaticResource CustomizedDesignRaisedAccentButton}">
                    <TextBlock>
                        <TextBlock Text="New" Visibility="{Binding IsReadOnly, Converter={StaticResource VisibilityConverter}}" />
                        <TextBlock Text="Save" Visibility="{Binding IsReadOnly, Converter={StaticResource InverseVisibilityConverter}}" />
                    </TextBlock>
                </Button>
            </WrapPanel>
            <!--#endregion-->
            <!--#region Trouble Messages-->
            <ItemsControl
                Margin="0,14,0,0"
                ItemsSource="{Binding ValidationMessage}"
                Style="{StaticResource ValidationItemsControl}"
                Visibility="{Binding IsTroubleVisible, Converter={StaticResource VisibilityConverter}}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Message}" TextWrapping="Wrap" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <!--#endregion-->
        </StackPanel>
    </Grid>
</UserControl>
