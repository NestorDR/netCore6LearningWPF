<Window x:Class="LearningWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:LearningWPF.ViewModels"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="Learning WPF (Windows Presentation Foundation)"
        ContentRendered="MainWindow_OnContentRendered"
        WindowStartupLocation="CenterScreen"
        Height="500" Width="800">
    <Window.Resources>
        <viewModels:MainWindowViewModel x:Key="ViewModel"
                                        InfoMessageTitle="Please wait while loading application..."
                                        InfoMessageTimeout="1000"
                                        StatusMessage="Learning WPF" />
        <system:String x:Key="WindowResourceString">Hello World! From Window Resource</system:String>
    </Window.Resources>
    <Grid DataContext="{StaticResource ViewModel}"> <!-- ViewModel is the resource key where the View Model is referenced. -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- Menu Area -->
        <Menu Grid.Row="0"
              IsMainMenu="True">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem Header="_Start">
                <!--
                Each control in WPF has a Tag property. This property is of the data type Object and isn't used by WPF. 
                This means that you can use it for whatever you want. You're going to use it for either:
                    - a command to execute, or for
                    - the name of a user control to create dynamically.
                -->
                <MenuItem Header="_Hello World!"
                          Click="MenuItem_OnClick"
                          Tag="LearningWPF.UserControls.Start.HelloWorld"/>
                <MenuItem Header="_Using styes"
                          Click="MenuItem_OnClick"
                          Tag="LearningWPF.UserControls.Start.UsingStyles"/>
                <MenuItem Header="_ListBox on ObservableCollection"
                          Click="MenuItem_OnClick"
                          Tag="LearningWPF.UserControls.Start.ListBoxOnObservableCollection"/>
                <MenuItem Header="_Notify property conditionally"
                          Click="MenuItem_OnClick"
                          Tag="LearningWPF.UserControls.Start.NotifyPropertyConditionally"/>
                <MenuItem Header="_ComboBoxSelection"
                          Click="MenuItem_OnClick"
                          Tag="LearningWPF.UserControls.Start.ComboBoxSelection"/>
                <Separator />
                <MenuItem Header="E_xit" Tag="exit" Click="MenuItem_OnClick"/>
            </MenuItem>
            <MenuItem Header="_Users"
                      Click="MenuItem_OnClick"
                      IsEnabled="True"
                      Tag="WPF.Sample.UserControls.UserMaintenanceControl"/>
            <MenuItem Header="Feedback" Tag="WPF.Sample.UserControls.UserFeedbackControl"
                      Click="MenuItem_OnClick"
                      IsEnabled="True"/>
            <MenuItem Header="{Binding Path=LoginMenuHeader}"
                      HorizontalAlignment="Right"
                      Click="MenuItem_OnClick"
                      Tag="login" />
        </Menu>

        <!-- Informational Message Area -->
        <StackPanel Grid.Row="1"
                    Panel.ZIndex="2"
                    VerticalAlignment="Bottom" 
                    Visibility="{Binding Path=IsInfoMessageVisible, Converter={StaticResource VisibilityConverter}}">
            <TextBlock FontSize="24" Text="{Binding Path=InfoMessageTitle}" HorizontalAlignment="Right"/>
            <TextBlock FontSize="20" Text="{Binding Path=InfoMessage}" HorizontalAlignment="Right"/>
        </StackPanel>

        <!-- Content Area -->
        <Grid Grid.Row="1"
              Panel.ZIndex="1"
              x:Name="ContentArea">
        </Grid>

        <!-- Status Message Area -->
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="{Binding Path=StatusMessage}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
